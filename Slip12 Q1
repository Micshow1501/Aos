#include <stdio.h>
#include <stdlib.h>
#include <sys/types.h>
#include <sys/wait.h>
#include <unistd.h>
int main() 
{
	pid_t pid = fork();
	if (pid < 0) 
	{
	perror("Fork failed");
	exit(EXIT_FAILURE);
	} 
	else if (pid == 0) 
	{
		 // Child process
		// Perform some task in the child process
		printf("Child process executing...\n");
		exit(42); // Child process exits with status 42
	} 
	else 
	{ 
		// Parent process
		int status;
		waitpid(pid, &status, 0); // Wait for the child process to terminate
		if (WIFEXITED(status)) 
		{
			printf("Child process exited normally with status: %d\n", WEXITSTATUS(status));
		} 
		else 
		{
			printf("Child process exited abnormally\n");
		}
	}
	return 0;
}
