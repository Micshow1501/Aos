graph = {
    1: [2, 3],
    2: [4, 5],
    3: [6, 7],
    4: [],
    5: [],
    6: [],
    7: []
}

def dfs(current, goal, visited, path):
    visited.add(current)
    path.append(current)

    if current == goal:
        return path

   for neighbor in graph[current]:
        if neighbor not in visited:
            new_path = dfs(neighbor, goal, visited, path)
            if new_path:
                return new_path
    path.pop()
initial_node = 2
goal_node = 7
visited_nodes = set()
result_path = dfs(initial_node, goal_node, visited_nodes, [])
if result_path:
    print(f"DFS Path from {initial_node} to {goal_node}: {result_path}")
else:
    print(f"No path found from {initial_node} to {goal_node}")
